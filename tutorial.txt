backend

nest new nestjs-api

cd nestjs-api

nest g module maps
nest g controller maps/places
nest g service maps/places   

nest g controller maps/directions
nest g service maps/directions

nest g resource routes - rest api

nest g module prisma
nest g service prisma
npx prisma init


after docker config
 - docker compose up
 - docker compose exec app sh -> npm run start:local

docker compose exec app sh -> 
  nest g service routes/routes-driver
  npm run start:repl -> await get(RoutesDriverService).processRoute({ route_id: '675ade2e30bbf8c5694e1e8a', lat: 112, lng: 223  })


Frontend

npx create-next-app@latest next-frontend

npm i @googlemaps/google-maps-services-js @googlemaps/js-api-loader
npm i @types/google.maps

# websocket
backend
npm i @nestjs/websockets @nestjs/platform-socket.io
nest g gateway routes/routes-driver

frontend
npm i socket.io-client